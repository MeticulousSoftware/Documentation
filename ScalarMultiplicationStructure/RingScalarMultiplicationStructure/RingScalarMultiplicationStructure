import "./declare" ⟦⟦All⟧⟧



define ⦃MetaRingScalarMultiplicationStructure⦄,⦃RingScalarMultiplicationStructure⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧RingScalarMultiplicationStructure⦄)⦄
			and:
				for all ⟦structure⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧RingScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄
					if and only if:
						there exists ⟦typeIdentifier0⟧:
								⦃⦃{
									⦃unicodeCodePoints Left⦄,
									⦃unicodeCodePoints Right⦄,
									⦃unicodeCodePoints Bi⦄
								}⦄.Has(⦃typeIdentifier0⦄)⦄
							and:
								⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧RingScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄



define ⦃MetaLeftRingScalarMultiplicationStructure⦄,⦃MetaRightRingScalarMultiplicationStructure⦄,
⦃LeftRingScalarMultiplicationStructure⦄,⦃RightRingScalarMultiplicationStructure⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
			for all ⟦typeIdentifier0⟧:
				if:
					⦃⦃{
						⦃unicodeCodePoints Left⦄,
						⦃unicodeCodePoints Right⦄
					}⦄.Has(⦃typeIdentifier0⦄)⦄
				then:
						⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧RingScalarMultiplicationStructure⦄)⦄
					and:
						for all ⟦structure⟧:
								⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧RingScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄
							if and only if:
									⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧ScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄
								and:
									⦃⦃PartialRing⦄.HasInstance(⦃⦃structure⦄.GetScalarStructure()⦄)⦄



define ⦃MetaBiRingScalarMultiplicationStructure⦄,⦃BiRingScalarMultiplicationStructure⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧BiRingScalarMultiplicationStructure⦄)⦄
			and:
				for all ⟦structure⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧BiRingScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄
					if and only if:
							⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧BiScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄
						and:
							for all ⟦typeIdentifier0⟧:
								if:
									⦃⦃{
										⦃unicodeCodePoints Left⦄,
										⦃unicodeCodePoints Right⦄
									}⦄.Has(⦃typeIdentifier0⦄)⦄
								then:
									⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧RingScalarMultiplicationStructure⦄.HasInstance(⦃structure⦄)⦄