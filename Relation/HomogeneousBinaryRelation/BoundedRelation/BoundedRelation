import "./declare" ⟦⟦All⟧⟧



define ⦃LowerBoundedRelation⦄,⦃UpperBoundedRelation⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Lower⦄,
				⦃unicodeCodePoints Upper⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧BoundedRelation⦄)⦄
			and:
				for all ⟦relation⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧BoundedRelation⦄.HasInstance(⦃relation⦄)⦄
					if and only if:
							⦃⦃TransitiveRelation⦄.HasInstance(⦃relation⦄)⦄
						and:
							not:
								let:
									⟦typeIdentifier0⟧:
										if:
											⦃⦃typeIdentifier⦄.IsEqualTo(⦃unicodeCodePoints Lower⦄)⦄
										then:
											⦃⦃typeIdentifier0⦄.IsEqualTo(⦃unicodeCodePoints Least⦄)⦄
										else:
											⦃⦃typeIdentifier0⦄.IsEqualTo(⦃unicodeCodePoints Greatest⦄)⦄
								⦃⦃⦃relation⦄.Get⟦⟦⦃typeIdentifier0⦄⟧⟧Elements()⦄.IsEqualTo(⦃{}⦄)⦄



define ⦃BoundedRelation⦄
		⦃⦃Type⦄.HasInstance(⦃BoundedRelation⦄)⦄
	and:
		for all ⟦relation⟧:
				⦃⦃BoundedRelation⦄.HasInstance(⦃relation⦄)⦄
			if and only if:
				for all ⟦typeIdentifier⟧:
					if:
						⦃⦃{
							⦃unicodeCodePoints Lower⦄,
							⦃unicodeCodePoints Upper⦄
						}⦄.Has(⦃typeIdentifier⦄)⦄
					then:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧BoundedRelation⦄.HasInstance(⦃relation⦄)⦄