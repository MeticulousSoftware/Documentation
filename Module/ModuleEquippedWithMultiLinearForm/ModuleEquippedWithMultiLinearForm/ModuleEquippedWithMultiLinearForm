import "./declare" ⟦⟦All⟧⟧



define ⦃MetaModuleEquippedWithMultiLinearForm⦄,⦃ModuleEquippedWithMultiLinearForm⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧ModuleEquippedWithMultiLinearForm⦄)⦄
			and:
				for all ⟦module⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧ModuleEquippedWithMultiLinearForm⦄.HasInstance(⦃module⦄)⦄
					if and only if:
						there exists ⟦typeIdentifier0⟧:
								⦃⦃{
									⦃unicodeCodePoints Left⦄,
									⦃unicodeCodePoints Right⦄
								}⦄.Has(⦃typeIdentifier0⦄)⦄
							and:
								⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧ModuleEquippedWithMultiLinearForm⦄.HasInstance(⦃module⦄)⦄



define ⦃MetaLeftModuleEquippedWithMultiLinearForm⦄,⦃MetaRightModuleEquippedWithMultiLinearForm⦄,
⦃LeftModuleEquippedWithMultiLinearForm⦄,⦃RightModuleEquippedWithMultiLinearForm⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
			for all ⟦typeIdentifier0⟧:
				if:
					⦃⦃{
						⦃unicodeCodePoints Left⦄,
						⦃unicodeCodePoints Right⦄
					}⦄.Has(⦃typeIdentifier0⦄)⦄
				then:
						⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧ModuleEquippedWithMultiLinearForm⦄)⦄
					and:
						for all ⟦module⟧:
								⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧ModuleEquippedWithMultiLinearForm⦄.HasInstance(⦃module⦄)⦄
							if and only if:
									⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧⟦⟦⦃typeIdentifier0⦄⟧⟧ModuleEquippedWithPartialMultiLinearForm⦄.HasInstance(⦃module⦄)⦄
								and:
									⦃⦃TotalOperation⦄.HasInstance(⦃⦃module⦄.GetMultiLinearForm()⦄)⦄