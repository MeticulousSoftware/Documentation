import "./declare" ⟦⟦All⟧⟧



define ⦃MetaIsoFibration⦄,⦃IsoFibration⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧IsoFibration⦄)⦄
			and:
				for all ⟦functor⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧IsoFibration⦄.HasInstance(⦃functor⦄)⦄
					if and only if:
							⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧Functor⦄.HasInstance(⦃functor⦄)⦄
						and:
							let:
								⟦coDomain⟧:
									⦃⦃coDomain⦄.IsEqualTo(⦃⦃functor⦄.GetCoDomain()⦄)⦄
							for all ⟦coDomainMorphism⟧:
								if:
										⦃⦃⦃coDomain⦄.GetIsoMorphims()⦄.Has(⦃coDomainMorphism⦄)⦄
									and:
										there exists ⟦object⟧:
											⦃⦃⦃coDomain⦄.GetDomainOf(⦃coDomainMorphism⦄)⦄.IsEqualTo(⦃⦃functor⦄.GetObjectImageOf(⦃object⦄)⦄)⦄
								then:
									there exists ⟦domainMorphism⟧:
											⦃⦃⦃⦃functor⦄.GetDomain()⦄.GetIsoMorphims()⦄.Has(⦃domainMorphism⦄)⦄
										and:
											⦃⦃⦃functor⦄.GetMorphismImageOf(⦃domainMorphism⦄)⦄.IsEqualTo(⦃coDomainMorphism⦄)⦄