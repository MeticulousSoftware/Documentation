import "./declare" ⟦⟦All⟧⟧



define ⦃MetaTerminalCategory⦄,⦃TerminalCategory⦄
	for all ⟦typeIdentifier⟧:
		if:
			⦃⦃{
				⦃unicodeCodePoints Meta⦄,
				⦃unicodeCodePoints ⦄
			}⦄.Has(⦃typeIdentifier⦄)⦄
		then:
				⦃⦃Type⦄.HasInstance(⦃⟦⟦⦃typeIdentifier⦄⟧⟧TerminalCategory⦄)⦄
			and:
				for all ⟦category⟧:
						⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧TerminalCategory⦄.HasInstance(⦃category⦄)⦄
					if and only if:
							⦃⦃⟦⟦⦃typeIdentifier⦄⟧⟧Category⦄.HasInstance(⦃category⦄)⦄
						and:
							not:
								⦃⦃MetaEmptyCategory⦄.HasInstance(⦃category⦄)⦄
						and:
							let:
								⟦category0⟧:
									if:
										⦃⦃Category⦄.HasInstance(⦃category0⦄)⦄
									then:
										⦃⦃category0⦄.IsEqualTo(⦃category⦄)⦄
									else:
										⦃⦃category0⦄.IsEqualTo(⦃⦃category⦄.GetCategory()⦄)⦄
							⦃⦃⦃category0⦄.GetSubCategories()⦄.IsSubMultiClassOf(⦃{⦃EmptyCategory⦄,⦃category⦄}⦄)⦄



define ⦃method ⦃MetaTerminalCategory⦄.GetObject⦄,⦃method ⦃MetaTerminalCategory⦄.GetMorphism⦄
	for all ⟦category⟧:
		if:
			⦃⦃MetaTerminalCategory⦄.HasInstance(⦃category⦄)⦄
		then:
			for all ⟦typeIdentifier⟧:
				if:
					⦃⦃{
						⦃unicodeCodePoints ⦄,
						⦃unicodeCodePoints Co⦄
					}⦄.Has(⦃typeIdentifier⦄)⦄
				then:
						⦃⦃⦃⦃category⦄.Get⟦⟦⦃typeIdentifier⦄⟧⟧⦄.GetDomain()⦄.IsEqualTo(⦃{⦃()⦄}⦄)⦄
					and:
						⦃⦃{
							⦃⦃category⦄.Get⟦⟦⦃typeIdentifier⦄⟧⟧()⦄
						}⦄.IsEqualTo(⦃⦃category⦄.Get⟦⟦⦃typeIdentifier⦄⟧⟧s()⦄)⦄